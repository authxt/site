---
import SlideIn from "@/components/animations/SlideIn";
---

<section class="flex flex-col gap-6">
  <div class="flex flex-col justify-start gap-4">
    <div 
      class="h-20 w-20 rounded-full overflow-hidden cursor-pointer hover:scale-[1.02] transition-transform"
      data-image="https://avatars.githubusercontent.com/u/192339393?v=4"
    >
      <img
        src="https://avatars.githubusercontent.com/u/192339393?v=4"
        alt="profile"
        class="h-full w-full object-cover transition-all duration-300"
      />
    </div>
    <div class="flex flex-col gap-1">
      <h1 class="text-2xl font-medium text-gray-200">Hi. I'm AuthX.</h1>
      <h2 class="text-lg text-gray-400">
        Developer from <span class="text-gray-300">Pokhara, Nepal.</span>
      </h2>
      <SlideIn client:load>
        <p class="text-base text-gray-400 mt-1">
          <span id="this-guy-changes">Rust!</span>
        </p>
      </SlideIn>
    </div>
  </div>
</section>

<div class="mt-8 -ml-4 hidden md:block">
  <div 
    class="relative w-[340px] max-w-full cursor-pointer overflow-hidden rounded-[2rem] bg-box-bg transition-transform hover:scale-[1.02]" 
    style="aspect-ratio: 3/4;"
    data-image="/Profile/Profile.png"
  >
    <img
      src="/Profile/Profile.png" 
      alt="Featured image"
      class="h-full w-full object-cover grayscale hover:grayscale-0 transition-all duration-300"
      loading="lazy"
    />
  </div>
</div>

<script>
  // GitHub status update
  async function getGitHubStatus() {
    const githubUsername = "authxth";

    try {
      const response = await fetch(
        `https://api.github.com/users/${githubUsername}`,
      );

      if (!response.ok) {
        throw new Error("GitHub API request failed");
      }

      const data = await response.json();

      const statusMessage = data.bio || "Rust!";
      const element = document.getElementById("this-guy-changes");
      if (element) element.innerText = statusMessage;
    } catch (error) {
      console.error("Error fetching GitHub status:", error);
      const element = document.getElementById("this-guy-changes");
      if (element) element.innerText = "Rust!";
    }
  }

  getGitHubStatus();
  setInterval(getGitHubStatus, 15000);

  // Image modal functionality
  let modal: any;

  // Initialize modal and add click handlers
  async function initializeModal() {
    const { default: HeroImageModal } = await import('@/components/shared/HeroImageModal');
    modal = new HeroImageModal();

    const profileImages = document.querySelectorAll('[data-image]');
    profileImages.forEach((image: Element) => {
      if (image instanceof HTMLElement) {
        image.addEventListener('click', () => {
          const imageSrc = image.dataset.image;
          if (imageSrc) modal.create(imageSrc);
        });
      }
    });
  }

  // Initialize on page load
  document.addEventListener('astro:page-load', initializeModal);
  // Also initialize on first load
  initializeModal();
</script>
